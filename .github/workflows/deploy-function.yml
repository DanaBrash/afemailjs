name: Deploy Azure Function

on:
  # Deploy only after merge to main
  push:
    branches: [ "main" ]
    paths:
      - "function/**"
      - ".github/workflows/deploy-function.yml"
  # PRs run build-only checks (no Azure login / no deploy)
  pull_request:
    branches: [ "main" ]
    paths:
      - "function/**"
      - ".github/workflows/deploy-function.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: function-deploy
  cancel-in-progress: true

env:
  AZURE_FUNCTIONAPP_NAME: afemailsjs-func
  NODE_VERSION: '20.x'
  WORKING_DIR: 'function'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: Install deps
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      # Add tests/lint here if you have them
      # - name: Test
      #   working-directory: ${{ env.WORKING_DIR }}
      #   run: npm test --if-present

  deploy:
    # Only deploy on push to main (never on pull_request)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: Install production deps
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          npm ci
          npm prune --omit=dev

      - name: Azure login (OIDC via tf-deployer)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}            # tf-deployer app (client) ID
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}            # your tenant ID
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}# your subscription ID

      - name: Who am I (sanity check)
        run: az account show --query "{sub:id, tenant:tenantId}" -o table

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.WORKING_DIR }}
